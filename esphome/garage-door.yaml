################################################################################
# SUBSTITUTIONS
################################################################################

substitutions:
  device_name: garage-door
  upper_devicename: garage-door
  device_description: "Controller for the garage door."

###############################################################################
# GENERAL
###############################################################################

esphome:
  name: $device_name
  comment: "${device_description}"
  platform: ESP8266
  board: d1_mini_pro

# Enable logging
logger:

# Enable ota update with a password
ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name} fallback"
    password: !secret esphome_fallback_password
    ap_timeout: 15s

captive_portal:

# Enable webserver
web_server:
  port: 80

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

###############################################################################
# SPECIFIC
###############################################################################

binary_sensor:

  - platform: status
    name: "${device_name} status"
    icon: "mdi:wifi"

  - platform: gpio
    name: "Door open sensor"
    id: "open_sensor"
    pin:
      number: D3
      mode: INPUT_PULLUP
      inverted: true
    filters:
      - delayed_on: 50ms
    on_press:
      then:
        - logger.log: "[SENSOR] Door open"

  - platform: gpio
    name: "Door closed sensor"
    id: "closed_sensor"
    pin:
      number: D4
      mode: INPUT_PULLUP
      inverted: true
    filters:
      - delayed_on: 50ms
    on_press:
      then:
        - logger.log: "[SENSOR] Door closed"

switch:
  - platform: gpio
    pin: D8
    id: garage_door_relay
    name: "Toggle garage door"
    on_turn_on:
    - delay: 500ms
    - switch.turn_off: garage_door_relay

cover:
  - platform: template
    device_class: garage
    name: "Garage door"

    # Used to determine the state.
    lambda: |-
      if (id(open_sensor).state) {
        return COVER_OPEN;
      } else {
        if (id(closed_sensor).state) {
          return COVER_CLOSED;
        } else {
          return {};
        }
      }

    open_action:
      - switch.turn_on: garage_door_relay
    close_action:
      - switch.turn_on: garage_door_relay
