################################################################################
# SUBSTITUTIONS
################################################################################

substitutions:
  device_name: air-sensor
  upper_devicename: Air-Sensor
  device_description: "Sensor for CO2, VOC, temperature and humidity."

###############################################################################
# GENERAL
###############################################################################

esphome:
  name: $device_name
  comment: "${device_description}"
  platform: ESP8266
  board: esp01_1m

# Enable logging
logger:

# Enable ota update with a password
ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name} fallback"
    password: !secret esphome_fallback_password
    ap_timeout: 15s

captive_portal:

# Enable webserver
web_server:
  port: 80

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

###############################################################################
# SPECIFIC
###############################################################################

binary_sensor:

  - platform: status
    name: "${upper_devicename} Status"
    icon: "mdi:wifi"

# Setup i2c for CCS811 Air quality sensor
i2c:
  sda: GPIO4
  scl: GPIO5

sensor:

  # CCS811 Air quality sensor
  - platform: ccs811
    address: 0x5B
    update_interval: 30s
    baseline: 0x0478

    eco2:
      name: "${upper_devicename} CO2"
      id: eco2
      device_class: "carbon_dioxide"
      state_class: "measurement"
      accuracy_decimals: 0

    tvoc:
      name: "${upper_devicename} VOC"
      device_class: "volatile_organic_compounds"
      state_class: "measurement"
      accuracy_decimals: 0
      id: tvoc

  # Humdity and temperature by DHT22 Shield Wemos D1.
  - platform: dht
    update_interval: 30s
    model: AM2302
    pin: GPIO2

    temperature:
      name: "${upper_devicename} Temperature"
      device_class: "temperature"
      state_class: "measurement"
      filters:
        - calibrate_linear:
            # Map 0.0 (from sensor) to 0.0 (true value)
            - 0.0 -> 0.0
            - 23.8 -> 17.6
            - 27.5 -> 21.6

    humidity:
      name: "${upper_devicename} Humidity"
      device_class: "humidity"
      state_class: "measurement"
      id: humi

# Air quality text sensor, taken from:
# https://community.home-assistant.io/t/example-indoor-air-quality-text-sensor-using-ccs811-sensor/125854
globals:
  - id: iaq_index
    type: int
    restore_value: false
    initial_value: '0'

text_sensor:
  - platform: template
    name: "${upper_devicename} Quality"
    icon: "mdi:air-filter"
    lambda: |-
      id(iaq_index) = 0;

      /*
       * Transform indoor humidity values to IAQ points according to Indoor Air Quality UK:
       * http://www.iaquk.org.uk/
       */
      if (id(humi).state < 10 or id(humi).state > 90) {
        id(iaq_index) += 1;
      }
      else if (id(humi).state < 20 or id(humi).state > 80) {
        id(iaq_index) += 2;
      }
      else if (id(humi).state < 30 or id(humi).state > 70) {
        id(iaq_index) += 3;
      }
      else if (id(humi).state < 40 or id(humi).state > 60) {
        id(iaq_index) += 4;
      }
      else if (id(humi).state >= 40 and id(humi).state <= 60) {
        id(iaq_index) += 5;
      }

      /*
       * Transform eCO2 values to IAQ points according to Indoor Air Quality UK:
       * http://www.iaquk.org.uk/
       */
      if (id(eco2).state <= 600) {
        id(iaq_index) += 5;
      }
      else if (id(eco2).state <= 800) {
        id(iaq_index) += 4;
      }
      else if (id(eco2).state <= 1500) {
        id(iaq_index) += 3;
      }
      else if (id(eco2).state <= 1800) {
        id(iaq_index) += 2;
      }
      else if (id(eco2).state > 1800) {
        id(iaq_index) += 1;
      }

      /*
       * Transform TVOC values to IAQ points according to German environmental guidelines:
       * https://www.repcomsrl.com/wp-content/uploads/2017/06/Environmental_Sensing_VOC_Product_Brochure_EN.pdf
       */
      if (id(tvoc).state <= 65) {
        id(iaq_index) += 5;
      }
      else if (id(tvoc).state <= 220) {
        id(iaq_index) += 4;
      }
      else if (id(tvoc).state <= 660) {
        id(iaq_index) += 3;
      }
      else if (id(tvoc).state <= 2200) {
        id(iaq_index) += 2;
      }
      else if (id(tvoc).state > 2200) {
        id(iaq_index) += 1;
      }

      /*
       * Transform IAQ index to human readable text according to Indoor Air Quality UK:
       * http://www.iaquk.org.uk/
       */
      ESP_LOGD("main", "Current IAQ index %d", id(iaq_index));

      if (id(iaq_index) <= 6) {
        return {"Unhealty"};
      }
      else if (id(iaq_index) <= 9) {
        return {"Poor"};
      }
      else if (id(iaq_index) <= 12) {
        return {"Moderate"};
      }
      else if (id(iaq_index) <= 14) {
        return {"Good"};
      }
      else if (id(iaq_index) > 14) {
        return {"Excellent"};
      }

      return {};
    update_interval: 30s
