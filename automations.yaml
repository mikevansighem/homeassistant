- id: '1628699826699'
  alias: Utility - Auto backup and upload
  description: Makes a backup and uploads it to Dropbox.
  trigger:
  - platform: time
    at: '1:00'
  condition: []
  action:
  - service: auto_backup.backup_full
    data:
      keep_days: 2
      name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
  mode: single
- id: '1628787697002'
  alias: Sprinklers - Irrigation control
  description: ''
  trigger:
  - platform: time
    at: input_datetime.watering_time
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.watering_level
      state: '0'
  action:
  - service: opensprinkler.run
    data:
      entity_id: binary_sensor.sprinkler_1_station_running
      run_seconds: '{{states("sensor.back_watering_time") | int }}'
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{states("sensor.back_watering_time") | int + 15}}'
      milliseconds: 0
  - service: opensprinkler.run
    data:
      entity_id: binary_sensor.sprinkler_2_station_running
      run_seconds: '{{states("sensor.front_watering_time") | int }}'
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{states("sensor.front_watering_time") | int + 15}}'
      milliseconds: 0
  - service: opensprinkler.run
    data:
      entity_id: binary_sensor.sprinkler_3_station_running
      run_seconds: '{{states("sensor.lawn_watering_time") | int }}'
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{states("sensor.lawn_watering_time") | int + 15}}'
      milliseconds: 0
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.voortuin_sprinkler_relais
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{states("sensor.driphose_watering_time") | int + 15}}'
      milliseconds: 0
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.voortuin_sprinkler_relais
  mode: single
- id: '1628878957372'
  alias: Alarm - Trigger while armed away
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.stairs_closet_motion
    - binary_sensor.downstairs_hallway_motion
    - binary_sensor.livingroom_motion
    - binary_sensor.upstairs_hallway_motion
    - binary_sensor.kitchen_door
    - binary_sensor.attic_motion
    - binary_sensor.bathroom_window
    - binary_sensor.bedroom_window
    - binary_sensor.nursery_window
    - binary_sensor.closet_window
    - binary_sensor.zolder_overloop_beweging
    - binary_sensor.badkamer_beweging
    - binary_sensor.toilet_beweging
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  - condition: not
    conditions:
    - condition: device
      device_id: 21772c2aaa1ef8b8657a520b4486f31f
      domain: vacuum
      entity_id: vacuum.noenoe
      type: is_cleaning
    - condition: device
      device_id: bbfcd968b38b244336509a78e99c525c
      domain: vacuum
      entity_id: vacuum.soapie
      type: is_cleaning
    - condition: state
      entity_id: cover.front_door_cover
      state: opening
    - condition: state
      entity_id: cover.front_door_cover
      state: closing
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
    data: {}
  mode: single
- id: '1629048220312'
  alias: Alarm - Trigger actions
  description: '- Flash lights / turn on

    - Sound Alarm

    - Send notification'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  condition: []
  action:
  - service: scene.create
    data:
      scene_id: before_alarm_sound
      entities: media_player.whole_home
  - parallel:
    - service: notify.notify
      data:
        message: The alarm has been triggered at {{ states('sensor.time') }}.
        title: Alarm
        data:
          group: Alarms
          tag: Alarm pending
          color: red
          ledColor: red
          priority: high
          ttl: 0
          channel: alarm_stream
          actions:
          - action: URI
            title: Disarm
            uri: /lovelace/alarm
    - service: script.alarm_sound_alarm
      data: {}
    - service: script.flash_licht
      data: {}
  mode: single
- id: '1629106372874'
  alias: Alarm - Pending
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: pending
  condition: []
  action:
  - service: scene.create
    data:
      scene_id: before_alarm_sound
      snapshot_entities: media_player.whole_home
  - service: notify.notify
    data:
      message: The alarm was triggerd and will sound in 30 seconds.
      title: Pending Alarm
      data:
        group: Alarms
        tag: Alarm pending
        color: red
        ledColor: red
        priority: high
        timeout: 300
        ttl: 0
        actions:
        - action: URI
          title: Disarm
          uri: /lovelace/alarm
        - action: ALARM
          title: Alarm
  - service: script.alarm_sound_pending
    data: {}
  mode: single
- id: '1629124515237'
  alias: Alarm - Play arming
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: arming
  condition: []
  action:
  - service: scene.create
    data:
      scene_id: before_alarm_sound
      snapshot_entities: media_player.whole_home
  - service: script.alarm_sound_arming
    data: {}
  mode: single
- id: '1629192620074'
  alias: Alarm - Trigger from notification
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ALARM
  condition: []
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '1629220722760'
  alias: Alarm - Auto (dis-)arming
  description: (Dis-)arm the alarm when the house state changes taking into account
    the early off and delay helpers.
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: home
    id: HOME
  - platform: state
    entity_id: sensor.house_state
    id: AWAY
    to: away
  - platform: state
    entity_id: sensor.house_state
    id: HOLIDAY
    to: holiday
  - platform: state
    entity_id: sensor.house_state
    id: NIGHT_ON
    to: night
    for: '{{ states( ''input_datetime.night_alarm_delay'' ) }}'
  - platform: template
    value_template: "{% set end_work = states('input_datetime.end_night_workday')
      %} \n{% set end_free = states('input_datetime.end_night_free_day') %} \n\n{%
      set early_hour = state_attr('input_datetime.night_alarm_early_stop', 'hour')
      %} \n{% set early_min = state_attr('input_datetime.night_alarm_early_stop',
      'minute') %} \n{% set early = timedelta( hours = early_hour, minutes = early_min
      ) %}\n\n{% set work_on = (strptime(end_work, '%H:%M:%S') - early).strftime('%H:%M')
      %}\n{% set free_on = (strptime(end_free, '%H:%M:%S') - early).strftime('%H:%M')
      %}\n\n{% if now().strftime('%H:%M') == work_on or now().strftime('%H:%M') ==
      free_on %}\n  true\n{% else %}\n  false\n{% endif %}\n"
    id: NIGHT_OFF
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: HOME
      sequence:
      - service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.home_alarm
        data:
          code: '2070'
    - conditions:
      - condition: trigger
        id: AWAY
      sequence:
      - service: alarm_control_panel.alarm_arm_away
        target:
          entity_id: alarm_control_panel.home_alarm
        data: {}
    - conditions:
      - condition: trigger
        id: HOLIDAY
      sequence:
      - service: alarm_control_panel.alarm_arm_away
        target:
          entity_id: alarm_control_panel.home_alarm
        data: {}
    - conditions:
      - condition: trigger
        id: NIGHT_ON
      sequence:
      - service: alarm_control_panel.alarm_arm_night
        target:
          entity_id: alarm_control_panel.home_alarm
        data: {}
    - conditions:
      - condition: trigger
        id: NIGHT_OFF
      - condition: not
        conditions:
        - condition: state
          entity_id: input_boolean.holiday
          state: 'on'
        - condition: state
          entity_id: sensor.house_state
          state: away
      sequence:
      - service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.home_alarm
        data:
          code: '2070'
    default: []
  mode: single
- id: '1629220807943'
  alias: Lights - All off when away
  description: '- Turn of all lights when away'
  trigger:
  - platform: state
    to: away
    entity_id: sensor.house_state
  condition: []
  action:
  - service: script.lights_turn_off_all_lights
  mode: single
- id: '1629568493916'
  alias: Alarm - Trigger while armed night
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.stairs_closet_motion
    - binary_sensor.downstairs_hallway_motion
    - binary_sensor.livingroom_motion
    - binary_sensor.kitchen_door
    - binary_sensor.attic_motion
    - binary_sensor.zolder_overloop_beweging
    - binary_sensor.toilet_beweging
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_night
  - condition: not
    conditions:
    - condition: device
      device_id: 21772c2aaa1ef8b8657a520b4486f31f
      domain: vacuum
      entity_id: vacuum.noenoe
      type: is_cleaning
    - condition: device
      device_id: bbfcd968b38b244336509a78e99c525c
      domain: vacuum
      entity_id: vacuum.soapie
      type: is_cleaning
    - condition: state
      entity_id: cover.front_door_cover
      state: opening
    - condition: state
      entity_id: cover.front_door_cover
      state: closing
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
    data: {}
  mode: single
- id: '1629825060315'
  alias: Climate - Hot water service
  description: ''
  trigger:
  - platform: template
    value_template: "        {% set night_start_free = state_attr('input_datetime.start_night_free_day',
      'hour') * 60 + state_attr('input_datetime.start_night_free_day', 'minute')%}\n
      \       {% set night_start_work = state_attr('input_datetime.start_night_workday',
      'hour') * 60 + state_attr('input_datetime.start_night_workday', 'minute')%}\n
      \       {% set night_end_free = state_attr('input_datetime.end_night_free_day',
      'hour') * 60 + state_attr('input_datetime.end_night_free_day', 'minute')%}\n
      \       {% set night_end_work = state_attr('input_datetime.end_night_workday',
      'hour') * 60 + state_attr('input_datetime.end_night_workday', 'minute')%}\n
      \       {% set pre_heat_offset = state_attr('input_datetime.hot_water_pre_heat',
      'hour') * 60 + state_attr('input_datetime.hot_water_pre_heat', 'minute')%}\n
      \       {% set stop_offset = state_attr('input_datetime.hot_water_early_stop',
      'hour') * 60 + state_attr('input_datetime.hot_water_early_stop', 'minute')%}\n
      \       {% set now = (states('sensor.time')[:2] | int)*60 + (states('sensor.time')[-2:]
      | int)%}\n        {% set house = states('sensor.house_state') %}\n\n        {%
      if is_state('binary_sensor.workday_sensor', 'off') %}\n          {% if (night_end_free
      - pre_heat_offset) < now < (night_start_free - stop_offset) %}\n            {%
      if house == 'away' or house == 'holiday' %}\n              false\n            {%else%}\n
      \             true\n            {%endif%}\n          {%else%}\n            false\n
      \         {%endif%}\n        {%else%}\n          {% if (night_end_work - pre_heat_offset)
      < now < (night_start_work - stop_offset) %}\n            {% if house == 'away'
      or house == 'holiday' %}\n              false\n            {%else%}\n              true\n
      \           {%endif%}\n          {%else%}\n            false\n          {%endif%}\n
      \       {%endif%}"
    id: 'ON'
  - platform: template
    value_template: "        {% set night_start_free = state_attr('input_datetime.start_night_free_day',
      'hour') * 60 + state_attr('input_datetime.start_night_free_day', 'minute')%}\n
      \       {% set night_start_work = state_attr('input_datetime.start_night_workday',
      'hour') * 60 + state_attr('input_datetime.start_night_workday', 'minute')%}\n
      \       {% set night_end_free = state_attr('input_datetime.end_night_free_day',
      'hour') * 60 + state_attr('input_datetime.end_night_free_day', 'minute')%}\n
      \       {% set night_end_work = state_attr('input_datetime.end_night_workday',
      'hour') * 60 + state_attr('input_datetime.end_night_workday', 'minute')%}\n
      \       {% set pre_heat_offset = state_attr('input_datetime.hot_water_pre_heat',
      'hour') * 60 + state_attr('input_datetime.hot_water_pre_heat', 'minute')%}\n
      \       {% set stop_offset = state_attr('input_datetime.hot_water_early_stop',
      'hour') * 60 + state_attr('input_datetime.hot_water_early_stop', 'minute')%}\n
      \       {% set now = (states('sensor.time')[:2] | int)*60 + (states('sensor.time')[-2:]
      | int)%}\n        {% set house = states('sensor.house_state') %}\n\n        {%
      if is_state('binary_sensor.workday_sensor', 'off') %}\n          {% if (night_end_free
      - pre_heat_offset) < now < (night_start_free - stop_offset) %}\n            {%
      if house == 'away' or house == 'holiday' %}\n              true\n            {%else%}\n
      \             false\n            {%endif%}\n          {%else%}\n            true\n
      \         {%endif%}\n        {%else%}\n          {% if (night_end_work - pre_heat_offset)
      < now < (night_start_work - stop_offset) %}\n            {% if house == 'away'
      or house == 'holiday' %}\n              true\n            {%else%}\n              false\n
      \           {%endif%}\n          {%else%}\n            true\n          {%endif%}\n
      \       {%endif%}"
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.hot_water_service
      - service: climate.set_temperature
        target:
          entity_id: climate.hot_water_service
        data:
          temperature: '{{ states(''input_number.hot_water_temperature'') }}'
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.hot_water_service
    default: []
  mode: queued
  max: 3
- id: '1630259774998'
  alias: Lights - Holiday replay
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.replay_living_room
    id: LIVINGROOM
  - platform: state
    entity_id: sensor.replay_kitchen
    id: KITCHEN
  - platform: state
    entity_id: sensor.replay_closet
    id: CLOSET
  - platform: state
    entity_id: sensor.replay_bedroom
    id: BEDROOM
  - platform: state
    entity_id: sensor.replay_dining_room
    id: DININGROOM
  - platform: state
    entity_id: input_boolean.holiday
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.holiday
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: LIVINGROOM
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_living_room
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.living_room
        - conditions:
          - condition: state
            entity_id: sensor.replay_living_room
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.living_room
        default: []
    - conditions:
      - condition: trigger
        id: DININGROOM
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_dining_room
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.dining_room
        - conditions:
          - condition: state
            entity_id: sensor.replay_dining_room
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.dining_room
        default: []
    - conditions:
      - condition: trigger
        id: BEDROOM
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_bedroom
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.bedroom
        - conditions:
          - condition: state
            entity_id: sensor.replay_bedroom
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.bedroom
        default: []
    - conditions:
      - condition: trigger
        id: CLOSET
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_closet
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.closet
        - conditions:
          - condition: state
            entity_id: sensor.replay_closet
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.closet
        default: []
    - conditions:
      - condition: trigger
        id: KITCHEN
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_kitchen
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.kitchen
        - conditions:
          - condition: state
            entity_id: sensor.replay_closet
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.kitchen
        default: []
    default: []
  mode: parallel
  max: 10
- id: '1630829332532'
  alias: Climate - Publish central heating current temp to MQTT
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.heating_delta
  - platform: homeassistant
    event: start
  - platform: time_pattern
    seconds: '30'
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ is_number(states(''sensor.heating_delta'')) }}'
    then:
    - service: mqtt.publish
      data:
        topic: opentherm-thermostat/current-temperature/set
        payload_template: '{{state_attr(''climate.central_heating'', ''temperature'')
          - states(''sensor.heating_delta'')|float}}'
  mode: parallel
  max: 10
- id: '1631038917696'
  alias: Alarm - Link panel
  description: Ensure both the software and physical alarm panel are linked.
  trigger:
  - platform: state
    entity_id: alarm_control_panel.alarm_panel_ias_ace
    id: PANEL TO HOME ALARM
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    id: HOME ALARM TO PANEL
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: PANEL TO HOME ALARM
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_panel_ias_ace
            state: armed_night
          sequence:
          - service: alarm_control_panel.alarm_arm_night
            target:
              entity_id: alarm_control_panel.home_alarm
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_panel_ias_ace
            state: armed_away
          sequence:
          - service: alarm_control_panel.alarm_arm_away
            target:
              entity_id: alarm_control_panel.home_alarm
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_panel_ias_ace
            state: triggered
          sequence:
          - service: alarm_control_panel.alarm_trigger
            target:
              entity_id: alarm_control_panel.home_alarm
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_panel_ias_ace
            state: disarmed
          sequence:
          - service: alarm_control_panel.alarm_disarm
            data:
              code: '2070'
            target:
              entity_id: alarm_control_panel.home_alarm
        default: []
    - conditions:
      - condition: trigger
        id: HOME ALARM TO PANEL
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: armed_night
          sequence:
          - service: alarm_control_panel.alarm_arm_night
            target:
              entity_id: alarm_control_panel.alarm_panel_ias_ace
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: armed_away
          sequence:
          - service: alarm_control_panel.alarm_arm_away
            target:
              entity_id: alarm_control_panel.alarm_panel_ias_ace
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: triggered
          sequence:
          - service: alarm_control_panel.alarm_trigger
            target:
              entity_id: alarm_control_panel.alarm_panel_ias_ace
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: disarmed
          sequence:
          - service: alarm_control_panel.alarm_disarm
            data:
              code: '2070'
            target:
              entity_id: alarm_control_panel.alarm_panel_ias_ace
        default: []
    default: []
  mode: queued
  max: 3
- id: '1631473532138'
  alias: Climate - Update livingroom radiator setpoint
  description: Update the central heating setpoint when the climate period changes.
  trigger:
  - platform: state
    entity_id: sensor.climate_setpoint
  - platform: state
    entity_id:
    - climate.woonkamer_radiator_thermostat
    to: heat
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ is_number(state_attr(''climate.woonkamer_radiator_thermostat'',''temperature''))
        }}'
    then:
    - repeat:
        while:
        - condition: template
          value_template: '{{states("sensor.climate_setpoint")|int != state_attr("climate.woonkamer_radiator_thermostat",
            "temperature")|int }}'
        sequence:
        - service: climate.set_temperature
          target:
            entity_id: climate.woonkamer_radiator_thermostat
          data:
            temperature: '{{ states(''sensor.climate_setpoint'') | float }}'
        - delay:
            hours: 0
            minutes: 1
            seconds: 0
            milliseconds: 0
  mode: single
  max: 3
- id: '1631815874577'
  alias: Climate - Floor heating pump
  description: Floor heating pump runs if there is a temp delta lager then -1 Every
    night it turns to prevent the pump from stalling.
  trigger:
  - platform: state
    entity_id: switch.floor_heating_pump_on_off
    id: TIME
    to: 'off'
    for:
      hours: 12
      minutes: 0
      seconds: 0
  - platform: template
    value_template: "{% set state = states('climate.beneden_vloerverwarming') %}\n{%
      set delta = state_attr('climate.beneden_vloerverwarming', \"temperature\") -
      state_attr('climate.beneden_vloerverwarming', \"current_temperature\") %}\n{%
      if state == 'heat' and delta|float > -5 %}\n  true\n{% else %}\n  false\n{%
      endif %}"
    id: 'ON'
  - platform: template
    value_template: "{% set state = states('climate.beneden_vloerverwarming') %}\n{%
      set delta = state_attr('climate.beneden_vloerverwarming', \"temperature\") -
      state_attr('climate.beneden_vloerverwarming', \"current_temperature\") %}\n{%
      if state == 'heat' and delta|float > -5 %}\n  false\n{% else %}\n  true\n{%
      endif %}"
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.floor_heating_pump_on_off
        data: {}
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - delay: '{{ states(''input_datetime.floor_heating_pump_delay'') }}'
      - service: switch.turn_off
        target:
          entity_id: switch.floor_heating_pump_on_off
        data: {}
    - conditions:
      - condition: trigger
        id: TIME
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.floor_heating_pump_on_off
        data: {}
      - delay:
          hours: 0
          minutes: 3
          seconds: 0
          milliseconds: 0
      - service: switch.turn_off
        target:
          entity_id: switch.floor_heating_pump_on_off
        data: {}
    default: []
  mode: restart
- id: '1632764660880'
  alias: Utility - Notify on restart
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: "Opnieuw opgestart \U0001F31F"
      Message: Home Assistant is opnieuw opgestart.
      Url: lovelace/home
      Voice: false
      Admin_only: true
      Timing: Always
      Group: Utility
      Timeout: 60
  mode: single
- id: '1633712008868'
  alias: Chime - Notify if pressed
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.doorbell_pressed
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: "Ding dong \U0001F514"
      Message: Er staat iemand aan de voordeur.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Only when home and no quiet time
      Group: General
      Timeout: 3
  mode: single
- id: '1635185749340'
  alias: Utility - Set theme
  description: Ensure the preffered theme is allways used.
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: frontend.set_theme
    data:
      name: Mushroom Square
  mode: single
- id: '1635571062556'
  alias: Utility - Update quiet helper
  description: 'Set quiet when house state is night.

    Needed to allow manual override of the schedule.'
  trigger:
  - platform: state
    entity_id:
    - sensor.quiet_time_schedule
    to: 'true'
    id: QUIET
  - platform: state
    entity_id:
    - sensor.quiet_time_schedule
    id: SOUND
    to: 'false'
  - platform: state
    entity_id:
    - sensor.house_state
    from: home
    to: away
    id: SOUND
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: QUIET
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.quiet
        data: {}
    - conditions:
      - condition: trigger
        id: SOUND
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.quiet
        data: {}
    default: []
  mode: single
- id: '1635792969335'
  alias: Lights - Reindeer follows living room
  description: Have the ESPHome reindeer follow the decorations light group.
  trigger:
  - platform: state
    entity_id:
    - light.living_room
    to: 'on'
    id: 'ON'
  - platform: state
    entity_id:
    - light.living_room
    to: 'off'
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - type: turn_on
        device_id: 5c76869dfc323722f7676b7a0448a090
        entity_id: light.reindeer_light
        domain: light
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - type: turn_off
        device_id: 5c76869dfc323722f7676b7a0448a090
        entity_id: light.reindeer_light
        domain: light
    default: []
  mode: single
- id: '1636210209751'
  alias: Lights - Outdoor decorations
  description: Turn on outdoor decorations when (close to) home and the sun is down.
  trigger:
  - platform: state
    entity_id: sensor.outdoor_lights
    to: 'on'
    id: 'ON'
  - platform: state
    entity_id: sensor.outdoor_lights
    to: 'off'
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: light.turn_on
        target:
          entity_id:
          - light.front_garden
        data: {}
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: light.turn_off
        target:
          entity_id:
          - light.front_garden
        data: {}
    default: []
  mode: restart
- id: '1636297508172'
  alias: Lights - Turn on lights when first down
  description: Turn the downstairs lights on when the first person is downstairs.
    The state is saved in an input boolean.
  trigger:
  - platform: state
    entity_id: binary_sensor.downstairs_hallway_motion
    to: 'on'
    id: TRIGGER
  - platform: state
    entity_id:
    - sensor.house_state
    to: away
    id: RESET
  - platform: time
    at: 03:30:00
    id: RESET
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: cover.front_door_cover
      state: opening
    - condition: state
      entity_id: cover.front_door_cover
      state: closing
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: RESET
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.first_down
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.first_down
        state: 'off'
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.first_down
        data: {}
      - service: scene.turn_on
        target:
          entity_id: scene.living_room_livingroom
        metadata: {}
    default: []
  mode: single
- id: '1637348841688'
  alias: Utility - Pull and deploy
  description: ''
  trigger:
  - platform: webhook
    webhook_id: deploy
    allowed_methods:
    - POST
    - PUT
    local_only: false
  condition: []
  action:
  - service: shell_command.git_pull
    data: {}
  - service: script.1655204175112
    data:
      Title: Updated configuration ↗
      Message: 'A configuration update was deployed: "{{states(''sensor.last_commit'')}}".'
      Url: lovelace/home
      Voice: false
      Admin_only: true
      Timing: When no quiet time
      Group: Utility
      Timeout: 60
  - service: homeassistant.restart
    data: {}
  mode: single
- id: '1641105359759'
  alias: Audio - All off when away
  description: '- Turn off all media players when away'
  trigger:
  - platform: state
    to: away
    entity_id: sensor.house_state
  condition: []
  action:
  - service: media_player.turn_off
    data: {}
    target:
      entity_id:
      - media_player.bedroom_home_mini
      - media_player.dining_room_speaker
      - media_player.living_room_home_mini
  mode: single
- id: '1642531564644'
  alias: Air - Livingroom fan control
  description: '- Turn off fan when holiday;

    - Limit fan speed during the night;

    - Increase fan speed when air quality is bad.

    - Keep as is when quality is moderate'
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: holiday
    id: 'OFF'
  - platform: state
    entity_id: sensor.air_sensor_quality
    id: POOR
    for:
      hours: 0
      minutes: 10
      seconds: 0
    to: Poor
  - platform: state
    entity_id: sensor.air_sensor_quality
    id: UNHEALTHY
    to: Unhealty
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id: sensor.air_sensor_quality
    to: Excellent
    id: EXCELLENT
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id: sensor.house_state
    id: 'ON'
    from: holiday
  - platform: state
    entity_id: sensor.air_sensor_quality
    to: Good
    id: GOOD
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id: sensor.house_state
    to: night
    id: NIGHT
  - platform: state
    entity_id:
    - sensor.air_sensor_quality
    for:
      hours: 0
      minutes: 30
      seconds: 0
    id: MODERATE_DOWN
    to: Moderate
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - device_id: 1d6db28ce04bb5fe9bbcdd10589e01e7
        domain: fan
        entity_id: fan.fan
        type: turn_off
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - device_id: 1d6db28ce04bb5fe9bbcdd10589e01e7
        domain: fan
        entity_id: fan.fan
        type: turn_on
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: POOR
        - condition: trigger
          id: UNHEALTHY
      - condition: not
        conditions:
        - condition: state
          entity_id: sensor.house_state
          state: holiday
      - condition: not
        conditions:
        - condition: state
          entity_id: sensor.house_state
          state: night
      sequence:
      - device_id: 1d6db28ce04bb5fe9bbcdd10589e01e7
        domain: fan
        entity_id: fan.fan
        type: turn_on
      - service: esphome.fan_controller_set_speed
        data:
          fan_speed: 2
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: MODERATE_DOWN
        - condition: trigger
          id: NIGHT
        - condition: trigger
          id: GOOD
        - condition: trigger
          id: EXCELLENT
      - condition: not
        conditions:
        - condition: state
          entity_id: sensor.house_state
          state: holiday
      sequence:
      - device_id: 1d6db28ce04bb5fe9bbcdd10589e01e7
        domain: fan
        entity_id: fan.fan
        type: turn_on
      - service: esphome.fan_controller_set_speed
        data:
          fan_speed: 1
    default: []
  mode: single
- id: '1645177798808'
  alias: Lights - Grow light
  description: Turn on growlight when nobody is home and the sun is up.
  trigger:
  - platform: state
    entity_id: sensor.grow_light_scheduler
    to: 'true'
    id: 'ON'
  - platform: state
    entity_id:
    - sensor.grow_light_scheduler
    to: 'false'
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.grow
        metadata: {}
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - condition: state
        entity_id: light.grow_light
        state: 'on'
      - service: scene.turn_on
        target:
          entity_id: scene.tv_lights_relax
        metadata: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 5
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.grow_light
          - light.wall_lamp_1
          - light.wall_lamp_2
          - light.wall_lamp_3
          - light.wall_lamp_4
    default: []
  mode: single
- id: '1647193940696'
  alias: Vacuum - Start vacuming when away
  description: Clean when away and battery full.
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: away
  condition:
  - condition: state
    entity_id: sensor.noenoe_battery_level
    state: '100'
  - condition: state
    entity_id: input_boolean.vacumed
    state: 'off'
  action:
  - device_id: 21772c2aaa1ef8b8657a520b4486f31f
    domain: vacuum
    entity_id: vacuum.noenoe
    type: clean
  - device_id: 8d51009ad631b297b6ffc1c3c0fd8172
    domain: vacuum
    entity_id: e41684602e68e38f9edf8f04333195ec
    type: clean
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.vacumed
  mode: single
- id: '1647194306332'
  alias: Vacuum - Notify when bin full
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.noenoe_bin_full
    to: 'on'
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: NoeNoe vol ♻️
      Message: Noenoe wil geleegd worden.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Retain till home and no quiet time
      Group: General
      Timeout: 0
  mode: single
- id: '1647452482457'
  alias: Vacuum - Reset vacumed helper
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: night
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.vacumed
  mode: single
- id: '1647545719116'
  alias: Vacuum - Stop and notify if Noenoe is stuck
  description: 'Stop the vacuum if it has been stuck for some time and notify. '
  trigger:
  - platform: state
    entity_id: vacuum.noenoe
    to: error
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: NoeNoe in de nesten ❌
      Message: NoeNoe heeft hulp nodig.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Always
      Group: General
      Timeout: 0
  - service: vacuum.stop
    data: {}
    target:
      device_id: 21772c2aaa1ef8b8657a520b4486f31f
  mode: single
- id: '1650130407618'
  alias: Utility - Notify on failed configuration
  description: ''
  trigger:
  - platform: webhook
    webhook_id: fail
    allowed_methods:
    - POST
    - PUT
    local_only: false
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: Configuratie niet geslaagd❌
      Url: https://github.com/mikevansighem/homeassistant/actions
      Voice: false
      Admin_only: true
      Timing: Always
      Group: Utility
      Timeout: 1440
      Message: Een configuratie deployment is niet geslaagd.
  mode: single
- id: '1651853081537'
  alias: Utility - Cleanup FRITZ!Box
  description: Trigger cleanup actions on FRITZ!Box devices.
  trigger:
  - platform: time
    at: 02:00:00
  condition: []
  action:
  - service: button.press
    data: {}
    target:
      entity_id:
      - button.fritz_box_7590_cleanup
      - button.fritz_powerline_1260e_cleanup
      - button.fritz_powerline_1260e_cleanup_2
  mode: single
- id: '1651855182269'
  alias: Chime - Off when quiet
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.quiet
    to: 'on'
    id: QUIET_TIME
  - platform: state
    entity_id:
    - input_boolean.quiet
    to: 'off'
    id: NOISE_TIME
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: QUIET_TIME
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.doorbell_chime_active
    - conditions:
      - condition: trigger
        id: NOISE_TIME
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.doorbell_chime_active
    default: []
  mode: single
- id: '1652002937947'
  alias: Plants - Low moisture notification
  description: ''
  use_blueprint:
    path: plant_moisture_notification.yaml
    input:
      time: '17:00:00'
      actions:
      - service: script.1655204175112
        data:
          Title: "Water mij \U0001F4A6"
          Url: lovelace/plants
          Timing: Retain till home and no quiet time
          Group: Plants
          Timeout: 1440
          Message: De {{sensors}} hebben water nodig.
          Voice: false
          Admin_only: false
- id: '1653651804886'
  alias: Utility - Notify for updates
  description: ''
  use_blueprint:
    path: mdegat01/update_notifications.yaml
    input:
      reminder_hours: None
      mobile_app_device: da960a0ac489ecb28f8a5e2b19b1c0ac
      run_config_check: true
      only_after: 00:00:00
      only_before: 00:00:00
      update_entities:
      - update.home_assistant_core_update
      - update.home_assistant_operating_system_update
      - update.home_assistant_supervisor_update
      notification_channel: Utility
- id: '1654623073206'
  alias: 'Lights - Motion control - Stairs closet '
  description: ''
  use_blueprint:
    path: turn-light-on-and-off-based-on-detected-motion.yaml
    input:
      motion_sensor: binary_sensor.stairs_closet_motion
      light: light.stairs_closet
      duration: 0:00:15
- id: '1654793996082'
  alias: Utility - Keep on
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.washing_machine
    - switch.dishwasher
    - switch.dryer
    to: 'off'
    id: RANDOM
  - platform: homeassistant
    event: start
    id: START
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: RANDOM
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: '{{ trigger.entity_id }}'
    - conditions:
      - condition: trigger
        id: START
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.washing_machine
          - switch.dryer
          - switch.dishwasher
    default: []
  mode: single
- id: '1654879355436'
  alias: Lights - Attic dimmer
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 8d6d831bfa4b4b4b59647ab5fb011cb9
      command: 'on'
    id: 'On'
  - platform: event
    event_type: zha_event
    event_data:
      device_id: 8d6d831bfa4b4b4b59647ab5fb011cb9
      command: off_press
    id: 'Off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'On'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.zolder
    - conditions:
      - condition: trigger
        id: 'Off'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.zolder
    default: []
  mode: restart
- id: '1654921534120'
  alias: Appliance - Dishwasher
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.dishwasher_electrical_measurement
    for:
      hours: 0
      minutes: 5
      seconds: 0
    above: '10'
  condition: []
  action:
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.dishwasher_electrical_measurement
      for:
        hours: 0
        minutes: 1
        seconds: 0
      below: 2.5
  - service: script.1655204175112
    data:
      Message: De vaatwasser is klaar.
      Title: Vaarwasser klaar
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Retain till home and no quiet time
      Group: General
      Timeout: 180
  mode: single
- id: '1654922393248'
  alias: Appliance - Dryer
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.dryer_electrical_measurement
    for:
      hours: 0
      minutes: 5
      seconds: 0
    above: '300'
  condition: []
  action:
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.dryer_electrical_measurement
      for:
        hours: 0
        minutes: 1
        seconds: 0
      below: '8'
  - service: script.1655204175112
    data:
      Message: De droger is klaar.
      Title: Droger klaar
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Retain till home and no quiet time
      Group: General
      Timeout: 180
  mode: single
- id: '1654922474089'
  alias: Appliance - Washing machine
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.washing_machine_electrical_measurement
    for:
      hours: 0
      minutes: 5
      seconds: 0
    above: '10'
  condition: []
  action:
  - wait_for_trigger:
    - platform: numeric_state
      entity_id: sensor.washing_machine_electrical_measurement
      for:
        hours: 0
        minutes: 1
        seconds: 0
      below: '5'
  - service: script.1655204175112
    data:
      Message: De wasmachine is klaar.
      Title: Wasmachine klaar
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Retain till home and no quiet time
      Group: General
      Timeout: 180
  mode: single
- id: '1655696046985'
  alias: Audio - Reset volume
  description: Set the volume of the Google home minis once a day.
  trigger:
  - platform: time
    at: 08:30:00
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: triggered
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: arming
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: pending
  action:
  - service: media_player.volume_set
    data:
      volume_level: '{{states(''input_number.aux_volume'') | float}}'
    target:
      entity_id: media_player.whole_home
  mode: single
- id: '1655902460729'
  alias: Vacuum - Stop and notify if Soapie is stuck
  description: 'Stop the vacuum if it has been stuck for some time and notify. '
  trigger:
  - platform: state
    entity_id:
    - vacuum.soapie
    to: error
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: Soapie in de nesten ❌
      Message: Soapie heeft hulp nodig.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Always
      Group: General
      Timeout: 0
  - service: vacuum.stop
    data: {}
    target:
      device_id:
      - bbfcd968b38b244336509a78e99c525c
  mode: single
- id: '1655902811258'
  alias: Vacuum - Reset mopped helper
  description: Reset the mopped helper
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: night
  condition:
  - condition: state
    entity_id: input_boolean.mopped
    for:
      hours: 70
      minutes: 0
      seconds: 0
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.mopped
  mode: single
- id: '1655903484119'
  alias: Vacuum - Notify when tank empty
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: vacuum.soapie
    attribute: tank_level
    below: '30'
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: "Soapie leeg \U0001F4A7"
      Message: Soapie heeft dorst.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Retain till home and no quiet time
      Group: General
      Timeout: 0
  mode: single
- id: '1660298269200'
  alias: Cover - Front door
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.house_state
    id: OPEN
    to: home
    from: night
    for:
      hours: 0
      minutes: '{{state_attr(''input_datetime.front_door_cover_late_open'', ''hour'')
        * 60 + state_attr(''input_datetime.front_door_cover_late_open'', ''minute'')}}'
      seconds: 0
  - platform: template
    value_template: "{% set work_day = states('binary_sensor.workday_sensor') %}\n\n{%
      set start_work = states('input_datetime.start_night_workday') %} \n{% set start_free
      = states('input_datetime.start_night_free_day') %} \n\n{% set early_hour = state_attr('input_datetime.front_door_cover_early_close',
      'hour') %} \n{% set early_min = state_attr('input_datetime.front_door_cover_early_close',
      'minute') %} \n{% set early = timedelta( hours = early_hour, minutes = early_min
      ) %}\n\n{% set work_on = (strptime(start_work, '%H:%M:%S') - early).strftime('%H:%M')
      %}\n{% set free_on = (strptime(start_free, '%H:%M:%S') - early).strftime('%H:%M')
      %}\n\n{% if ( work_day == 'on' and now().strftime('%H:%M') == work_on ) or (
      work_day == 'off' and now().strftime('%H:%M') == free_on ) %}\n  true\n{% else
      %}\n  false\n{% endif %}"
    id: CLOSE
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: CLOSE
      sequence:
      - condition: state
        entity_id: cover.front_door_cover
        state: open
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.front_door_cover
    - conditions:
      - condition: trigger
        id: OPEN
      sequence:
      - condition: state
        entity_id: cover.front_door_cover
        state: closed
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.front_door_cover
    default: []
  mode: single
- id: '1660389010787'
  alias: Utility - Persistant notification for low battery
  description: ''
  use_blueprint:
    path: low_battery.yaml
    input:
      time: 01:00:00
      exclude:
        entity_id:
        - sensor.soapie_battery_level
        - sensor.sm_s901b_battery_level
        - sensor.noenoe_battery_level
        - sensor.samsung_a35_battery_level
      actions:
      - service: persistent_notification.dismiss
        data:
          notification_id: low_battery
      - service: persistent_notification.create
        data:
          message: Vervang batterij {{ sensors }}. [Meer info.](/lovelace/batterijen)
          title: Low battery
          notification_id: low_battery
- id: '1660828842957'
  alias: Utility - Persistant notification for missing entities
  description: ''
  trigger:
  - platform: time
    at: 03:33:00
  condition:
  - condition: numeric_state
    entity_id: sensor.watchman_missing_entities
    above: '0'
  action:
  - service: persistent_notification.dismiss
    data:
      notification_id: watchmen_missing_entity
  - service: persistent_notification.create
    data:
      message: 'Missende entiteiten: {{ states(''sensor.watchman_missing_entities'')
        }}. [Meer info.](/lovelace/systeem)'
      title: Missende entiteiten
      notification_id: watchmen_missing_entity
  mode: single
- id: '1660830979144'
  alias: Utility - Persistant notification for missing services
  description: ''
  trigger:
  - platform: time
    at: 03:34:00
  condition:
  - condition: numeric_state
    entity_id: sensor.watchman_missing_services
    above: '0'
  action:
  - service: persistent_notification.dismiss
    data:
      notification_id: watchmen_missing_service
  - service: persistent_notification.create
    data:
      message: 'Missende services: {{ states(''sensor.watchman_missing_services'')
        }}. [Meer info.](/lovelace/systeem)'
      title: Missende service
      notification_id: watchmen_missing_service
  mode: single
- id: '1661359567139'
  alias: Utility - Persistant notification for full disk
  description: ''
  trigger:
  - platform: time
    at: 03:44:00
  condition:
  - condition: numeric_state
    entity_id: sensor.disk_use_percent
    above: '75'
  action:
  - service: persistent_notification.dismiss
    data:
      notification_id: disk_use
  - service: persistent_notification.create
    data:
      message: Schijf gebruik {{ states('sensor.disk_use_percent') }}%. [Meer info.](/lovelace/systeem)
      title: Hoog schijf gebruik
      notification_id: disk_use
  mode: single
- id: '1661532418642'
  alias: Lights - Turn off if there is no motion - Downstairs hallway
  description: ''
  use_blueprint:
    path: turn_light_off_when_no_motion_short.yaml
    input:
      motion_sensor: binary_sensor.downstairs_hallway_motion
      light: light.downstairs_hallway
      time_out: input_datetime.light_motion_timeout_short
- id: '1661532503833'
  alias: Lights - Turn off if there is no motion - Living room
  description: ''
  use_blueprint:
    path: turn_light_off_when_no_motion_long.yaml
    input:
      motion_sensor: binary_sensor.livingroom_motion
      light: light.living_room
- id: '1661532563136'
  alias: Lights - Turn off if there is no motion - Upstairs hallway
  description: ''
  use_blueprint:
    path: turn_light_off_when_no_motion_short.yaml
    input:
      motion_sensor: binary_sensor.upstairs_hallway_motion
      light: light.upstairs_hallway
- id: '1661532603962'
  alias: Lights - Turn off if there is no motion - Attic
  description: ''
  use_blueprint:
    path: turn_light_off_when_no_motion_long.yaml
    input:
      motion_sensor: binary_sensor.attic_motion
      light: light.zolder
- id: '1661532657566'
  alias: Lights - Turn off if there is no motion - Zoë
  description: ''
  use_blueprint:
    path: turn_light_off_when_no_motion_long.yaml
    input:
      motion_sensor: binary_sensor.zoe_camera_motion
      light: light.kids_room
- id: '1661573682772'
  alias: Climate - Bathroom radiator
  description: ''
  use_blueprint:
    path: radiator_control.yaml
    input:
      radiator: climate.bathroom_radiator_thermostat
      window: binary_sensor.bathroom_window
- id: '1661573786768'
  alias: Climate - Bedroom radiator
  description: ''
  use_blueprint:
    path: radiator_control.yaml
    input:
      radiator: climate.bedroom_radiator_thermostat
      window: binary_sensor.bedroom_window
- id: '1661573856733'
  alias: Climate - Closet radiator
  description: ''
  use_blueprint:
    path: radiator_control.yaml
    input:
      radiator: climate.closet_radiator_thermostat
      window: binary_sensor.closet_window
- id: '1661573889424'
  alias: Climate - Kids room radiator
  description: ''
  use_blueprint:
    path: radiator_control.yaml
    input:
      radiator: climate.kids_room_radiator_thermostat
      window: binary_sensor.nursery_window
- id: '1662484112575'
  alias: Air - Humidifier
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.house_state
    id: 'ON'
    from: night
    to: home
    for:
      hours: 0
      minutes: '{{state_attr(''input_datetime.humidifier_late_on'', ''hour'') * 60
        + state_attr(''input_datetime.humidifier_late_on'', ''minute'')}}'
      seconds: 0
  - platform: template
    value_template: "{% set work_day = states('binary_sensor.workday_sensor') %}\n\n{%
      set start_work = states('input_datetime.start_night_workday') %} \n{% set start_free
      = states('input_datetime.start_night_free_day') %} \n\n{% set early_hour = state_attr('input_datetime.humidifier_early_off',
      'hour') %} \n{% set early_min = state_attr('input_datetime.humidifier_early_off',
      'minute') %} \n{% set early = timedelta( hours = early_hour, minutes = early_min
      ) %}\n\n{% set work_on = (strptime(start_work, '%H:%M:%S') - early).strftime('%H:%M')
      %}\n{% set free_on = (strptime(start_free, '%H:%M:%S') - early).strftime('%H:%M')
      %}\n\n{% if ( work_day == 'on' and now().strftime('%H:%M') > work_on ) or (
      work_day == 'off' and now().strftime('%H:%M') > free_on ) %}\n  true\n{% else
      %}\n  false\n{% endif %}"
    id: 'OFF'
  - platform: state
    entity_id:
    - sensor.house_state
    from: away
    to: home
    id: 'ON'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - condition: template
        value_template: "{% set work_day = states('binary_sensor.workday_sensor')
          %}\n\n{% set start_work = states('input_datetime.start_night_workday') %}
          \n{% set start_free = states('input_datetime.start_night_free_day') %} \n\n{%
          set early_hour = state_attr('input_datetime.humidifier_early_off', 'hour')
          %} \n{% set early_min = state_attr('input_datetime.humidifier_early_off',
          'minute') %} \n{% set early = timedelta( hours = early_hour, minutes = early_min
          ) %}\n\n{% set work_on = (strptime(start_work, '%H:%M:%S') - early).strftime('%H:%M')
          %}\n{% set free_on = (strptime(start_free, '%H:%M:%S') - early).strftime('%H:%M')
          %}\n\n{% if ( work_day == 'on' and now().strftime('%H:%M') > work_on ) or
          ( work_day == 'off' and now().strftime('%H:%M') > free_on ) %}\n  false\n{%
          else %}\n  true\n{% endif %}"
      - repeat:
          while:
          - condition: state
            entity_id: switch.humidifier
            state: 'off'
          sequence:
          - service: switch.turn_on
            data: {}
            target:
              entity_id: switch.humidifier
          - delay:
              hours: 0
              minutes: 0
              seconds: 30
              milliseconds: 0
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - repeat:
          while:
          - condition: state
            entity_id: switch.humidifier
            state: 'on'
          sequence:
          - service: switch.turn_off
            data: {}
            target:
              entity_id: switch.humidifier
          - delay:
              hours: 0
              minutes: 0
              seconds: 30
              milliseconds: 0
    default: []
  mode: single
- id: '1663154996923'
  alias: Utility - Persistent notification for offline devices
  description: ''
  trigger:
  - platform: time
    at: 01:33:00
  condition:
  - condition: numeric_state
    entity_id: sensor.disconnected
    above: '0'
  action:
  - service: persistent_notification.dismiss
    data:
      notification_id: offline
  - service: persistent_notification.create
    data:
      message: 'Niet verbonden apparaten: {{ states(''sensor.disconnected'') }}. [Meer
        info.](/lovelace/netwerk)'
      title: Offline apparaten
      notification_id: offline
  mode: single
- id: '1663946115137'
  alias: Climate - Switch central heating
  description: Turn on/off central heating if any thermostat requires heating
  trigger:
  - platform: state
    entity_id:
    - sensor.heating_leading_room
    to: Niet actief
    id: 'OFF'
  - platform: state
    entity_id:
    - sensor.heating_leading_room
    from: Niet actief
    id: 'ON'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.central_heating
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.central_heating
  mode: single
- id: '1664697081587'
  alias: Climate - Floorheating follows radiator
  description: Downstairs floorheating follows the livingroom radiator setpoint to
    give easy and physical controls.
  trigger:
  - platform: state
    entity_id:
    - climate.woonkamer_radiator_thermostat
    attribute: temperature
    id: TEMP
  - platform: state
    entity_id:
    - climate.woonkamer_radiator_thermostat
    to: 'off'
    id: 'OFF'
  - platform: state
    entity_id:
    - climate.woonkamer_radiator_thermostat
    id: 'ON'
    to: heat
  - platform: homeassistant
    event: start
    id: START
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: TEMP
      sequence:
      - service: climate.set_temperature
        target:
          entity_id: climate.beneden_vloerverwarming
        data:
          temperature: '{{ state_attr(''climate.woonkamer_radiator_thermostat'', ''temperature'')
            | float(15) }}'
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.beneden_vloerverwarming
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.beneden_vloerverwarming
    - conditions:
      - condition: trigger
        id: START
      - condition: state
        entity_id: climate.woonkamer_radiator_thermostat
        state: heat
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.beneden_vloerverwarming
  mode: queued
  max: 3
- id: '1664697769087'
  alias: Climate - Livingroom
  description: ''
  use_blueprint:
    path: radiator_control.yaml
    input:
      radiator: climate.woonkamer_radiator_thermostat
      window: binary_sensor.beneden_deuren_en_ramen
- id: '1664988079015'
  alias: Climate - Garage follows livingroom
  description: Downstairs floorheating follows the livingroom radiator setpoint to
    give easy and physical controls.
  trigger:
  - platform: state
    entity_id:
    - climate.woonkamer_radiator_thermostat
    to: 'off'
    id: 'OFF'
  - platform: state
    entity_id:
    - climate.woonkamer_radiator_thermostat
    id: 'ON'
    to: heat
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.garage_radiator_thermostat
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.garage_radiator_thermostat
  mode: queued
  max: 3
- id: '1666443364506'
  alias: Chime - Mike comes home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.tmp
    for:
      hours: 0
      minutes: 0
      seconds: 15
    to: home
  condition:
  - condition: state
    entity_id: person.anneloes_jagt
    state: home
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - condition: state
    entity_id: input_boolean.quiet
    state: 'off'
  action:
  - service: esphome.doorbell_chime
    data: {}
  - service: script.1655204175112
    data:
      Title: "Ding dong \U0001F514"
      Message: Er staat iemand aan de voordeur.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Only when home and no quiet time
      Group: General
      Timeout: 3
  mode: single
- id: '1666443515270'
  alias: Chime - Anneloes comes home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.anneloes_jagt
    to: home
  condition:
  - condition: state
    entity_id: light.night_light_mike
    state: home
    for:
      hours: 0
      minutes: 15
      seconds: 0
  - condition: state
    entity_id: input_boolean.quiet
    state: 'off'
  action:
  - service: esphome.doorbell_chime
    data: {}
  - service: script.1655204175112
    data:
      Title: "Ding dong \U0001F514"
      Message: Er staat iemand aan de voordeur.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Only when home and no quiet time
      Group: General
      Timeout: 3
  mode: single
- id: '1672923790316'
  alias: Lights - Motion control - Attic
  description: ''
  use_blueprint:
    path: turn-light-on-and-off-based-on-detected-motion.yaml
    input:
      motion_sensor: binary_sensor.attic_motion
      light: light.zolder
      duration: 0:15:00
- id: '1672923812224'
  alias: Lights - Motion control - Attic hallway
  description: ''
  use_blueprint:
    path: turn-light-on-and-off-based-on-detected-motion.yaml
    input:
      motion_sensor: binary_sensor.zolder_overloop_beweging
      light: light.attic_hallway
      duration: 0:15:00
- id: '1672923879341'
  alias: Lights - Turn off if there is no motion - Attic hallway
  description: ''
  use_blueprint:
    path: turn_light_off_when_no_motion_short.yaml
    input:
      motion_sensor: binary_sensor.zolder_overloop_beweging
      light: light.attic_hallway
- id: '1673074518427'
  alias: Lights - Motion control - Toilet
  description: ''
  use_blueprint:
    path: turn-light-on-and-off-based-on-detected-motion.yaml
    input:
      motion_sensor: binary_sensor.toilet_beweging
      light: light.toilet
      duration: 0:01:00
- id: '1673183796191'
  alias: ' Lights - Turn off if there is no motion - Bathroom'
  description: ''
  use_blueprint:
    path: turn_light_off_when_no_motion_long.yaml
    input:
      motion_sensor: binary_sensor.badkamer_beweging
      light: light.badkamer
- id: '1674984169355'
  alias: Utility - Purge database
  description: ''
  trigger:
  - platform: time
    at: 00:03:22
  condition: []
  action:
  - service: recorder.purge
    data:
      repack: true
      keep_days: 8
  mode: single
- id: '1679753075499'
  alias: Utility - Update all ESPHome devices
  description: ''
  trigger:
  - platform: time
    at: 00:20:00
  condition: []
  action:
  - service: update.install
    data: {}
    target:
      entity_id:
      - update.waterlezer_firmware
      - update.doorbell_firmware
      - update.air_sensor_firmware
      - update.esphome_update
      - update.fan_controller_firmware
      - update.slimmelezer_firmware
      - update.fan_button_firmware
      - update.voortuin_sprinkler_firmware
      - update.keuken_ventilator_firmware
  mode: single
- id: '1683952397926'
  alias: 'Air - Keuken ventilator '
  description: ''
  trigger:
  - platform: template
    value_template: "{% if (is_state('sensor.air_sensor_quality', 'Poor') or is_state('sensor.air_sensor_quality',
      'Unhealty') and is_state('sensor.house_state', 'away') ) %}\n  {% if 10 < states('sensor.buienradar_temperature')
      < 25 %}\n    True\n  {% else %}\n    False\n  {% endif %}\n{% else %}\n  False\n{%
      endif %}"
    id: 'ON'
  - platform: template
    value_template: "{% if (is_state('sensor.air_sensor_quality', 'Poor') or is_state('sensor.air_sensor_quality',
      'Unhealty') and is_state('sensor.house_state', 'away') ) %}\n  {% if 10 < states('sensor.buienradar_temperature')
      < 25 %}\n    False\n  {% else %}\n    True\n  {% endif %}\n{% else %}\n  True\n{%
      endif %}"
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - type: turn_on
        device_id: 00d68240c7ddda6cb74d2e2afc77bf33
        entity_id: fan.keuken_ventilator
        domain: fan
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - type: turn_off
        device_id: 00d68240c7ddda6cb74d2e2afc77bf33
        entity_id: fan.keuken_ventilator
        domain: fan
  mode: single
- id: '1685981131120'
  alias: Light - Kitchen switch
  description: ''
  trigger:
  - platform: event
    event_type: hue_event
    event_data:
      id: keuken_schakelaar_button
      device_id: 1715fd824115d43b8c131a2fb7e7cca9
      unique_id: 1ff9fe97-28ec-4e1f-a11d-c1dc415411e2
      type: initial_press
    id: 'ON'
  - platform: event
    event_type: hue_event
    event_data:
      id: keuken_schakelaar_button
      device_id: 1715fd824115d43b8c131a2fb7e7cca9
      unique_id: 4cc40d62-37c8-4007-8918-49098c318693
      type: initial_press
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - type: turn_on
        device_id: 66de4bdab0d6fcdb2345eb320108131c
        entity_id: light.kitchen
        domain: light
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - type: turn_off
        device_id: 66de4bdab0d6fcdb2345eb320108131c
        entity_id: light.kitchen
        domain: light
  mode: single
- id: '1685982300815'
  alias: Utility - Restart at high disk use
  description: ''
  trigger:
  - platform: time
    at: 03:10:00
  condition:
  - condition: numeric_state
    entity_id: sensor.disk_use_percent
    above: '75'
  action:
  - service: homeassistant.restart
    data: {}
  mode: single
- id: '1693720069549'
  alias: Utility - Switch Pi-hole on
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.pi_hole
    to: 'off'
    for:
      hours: 3
      minutes: 0
      seconds: 0
  condition: []
  action:
  - type: turn_on
    device_id: 69f365fa32a1ca450bb0d92685c5cd0a
    entity_id: c0fdfa9c79ec001e5559b4064ccfc817
    domain: switch
  mode: single
- id: '1697734212600'
  alias: Vacuum - Notify if Junior is in trouble
  description: 'Stop the vacuum if it has been stuck for some time and notify. '
  trigger:
  - platform: state
    entity_id:
    - vacuum.junior
    to: error
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: Junior in de nesten ❌
      Message: Junior heeft hulp nodig.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Always
      Group: General
      Timeout: 0
  - service: vacuum.stop
    data: {}
    target:
      device_id:
      - 8d51009ad631b297b6ffc1c3c0fd8172
  mode: single
- id: '1697734304743'
  alias: Vacuum - Notify Juniors bin full
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.junior_bin_full
    to: 'on'
  condition: []
  action:
  - service: script.1655204175112
    data:
      Title: Junior vol ♻️
      Message: Junior wil geleegd worden.
      Url: lovelace/home
      Voice: true
      Admin_only: false
      Timing: Retain till home and no quiet time
      Group: General
      Timeout: 0
  mode: single
- id: '1701005207044'
  alias: Vacuum - Start Saopie when vacuumed and away
  description: Clean when away and battery full after vacuuming.
  trigger:
  - platform: state
    entity_id:
    - vacuum.junior
    to: docked
  condition:
  - condition: state
    entity_id: sensor.soapie_battery_level
    state: '100'
  - condition: state
    entity_id: input_boolean.mopped
    state: 'off'
  - condition: state
    entity_id: sensor.house_state
    state: away
  action:
  - device_id: 2833598d2470cebd380be406dedabd3b
    domain: vacuum
    entity_id: 99433579fdf440e2249354215881c0b2
    type: clean
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id:
      - input_boolean.mopped
  mode: single
