- id: '1628699826699'
  alias: Utility - Auto snapshot and backup
  description: Takes snapshot and uploads to Dropbox
  trigger:
  - platform: time
    at: '1:00'
  condition: []
  action:
  - service: hassio.backup_full
    data_template:
      name: Automated Backup {{ now().strftime('%Y-%m-%d') }}
  - service: hassio.addon_stdin
    data:
      addon: 7be23ff5_dropbox_sync
      input:
        command: upload
  mode: single
- id: '1628787697002'
  alias: Sprinklers - Irrigation control
  description: ''
  trigger:
  - platform: time
    at: input_datetime.watering_time
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.watering_level
      state: '0'
  action:
  - service: opensprinkler.run
    data:
      entity_id: binary_sensor.sprinkler_1_station_running
      run_seconds: '{{states("sensor.back_watering_time") | int }}'
  - delay:
      hours: 0
      minutes: 0
      seconds: '{{states("sensor.back_watering_time") | int + 15}}'
      milliseconds: 0
  - service: opensprinkler.run
    data:
      entity_id: binary_sensor.sprinkler_2_station_running
      run_seconds: '{{states("sensor.front_watering_time") | int }}'
  mode: single
- id: '1628878957372'
  alias: Alarm - Trigger while armed away
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.stair_closet_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.livingroom_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.downstairs_hallway_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.upstairs_hallway_motion
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
    data: {}
  mode: single
- id: '1629048220312'
  alias: Alarm - Trigger actions
  description: '- Flash lights / turn on

    - Sound Alarm

    - Send notification'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: triggered
  condition: []
  action:
  - service: scene.create
    data:
      snapshot_entities: media_player.speaker_group
      scene_id: before_alarm_sound
  - service: script.alarm_sound_alarm
  - service: notify.notify
    data:
      message: The alarm has been triggered at {{ states('sensor.time') }}.
      title: Alarm
      data:
        group: Alarms
        tag: Alarm pending
        color: red
        ledColor: red
        priority: high
        ttl: 0
        channel: alarm_stream
        actions:
        - action: URI
          title: Disarm
          uri: /lovelace/alarm
  - service: script.flash_licht
  mode: single
- id: '1629106372874'
  alias: Alarm - Pending
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: pending
  condition: []
  action:
  - service: notify.notify
    data:
      message: The alarm was triggerd and will sound in 30 seconds.
      title: Pending Alarm
      data:
        group: Alarms
        tag: Alarm pending
        color: red
        ledColor: red
        priority: high
        timeout: 300
        ttl: 0
        actions:
        - action: URI
          title: Disarm
          uri: /lovelace/alarm
        - action: ALARM
          title: Alarm
  - service: scene.create
    data:
      snapshot_entities: media_player.speaker_group
      scene_id: before_alarm_sound
  - service: script.alarm_sound_pending
  mode: single
- id: '1629124515237'
  alias: Alarm - Play arming
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: arming
  condition: []
  action:
  - service: script.alarm_sound_arming
  - service: scene.create
    data:
      snapshot_entities: media_player.speaker_group
      scene_id: before_alarm_sound
  mode: single
- id: '1629192620074'
  alias: Alarm - Trigger from notification
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ALARM
  condition: []
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '1629220722760'
  alias: Alarm - Auto (dis-)arming
  description: (Dis-)arm the alarm when the house state changes taking into account
    the early off and delay helpers.
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: home
    id: HOME
  - platform: state
    entity_id: sensor.house_state
    id: AWAY
    to: away
  - platform: state
    entity_id: sensor.house_state
    id: HOLIDAY
    to: holiday
  - platform: state
    entity_id: sensor.house_state
    id: NIGHT_ON
    to: night
    for: '{{ states( ''input_datetime.night_alarm_delay'' ) }}'
  - platform: template
    value_template: "{% set early = state_attr('input_datetime.night_alarm_early_stop',\
      \ 'timestamp') %} {% set tnow = strptime(states('sensor.time'), '%H:%M')+timedelta(seconds=2208988800)\
      \ %} {% set end_work = state_attr('input_datetime.end_night_workday', 'timestamp')\
      \ %} {% set work_end_time = (end_work - early)  | timestamp_utc %} {% set end_free\
      \ = state_attr('input_datetime.end_night_free_day', 'timestamp') %} {% set free_end_time\
      \ = (end_free - early)  | timestamp_utc %}\n{% if is_state('binary_sensor.workday_sensor',\
      \ 'on') %}\n  {% if as_timestamp(work_end_time) == as_timestamp(tnow) %}\n \
      \   true\n  {% else %}\n    false\n  {% endif %}\n{% else %}\n  {% if as_timestamp(free_end_time)\
      \ == as_timestamp(tnow) %}\n    true\n  {% else %}\n    false\n  {% endif %}\n\
      {% endif %}\n"
    id: NIGHT_OFF
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: HOME
      sequence:
      - service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.home_alarm
        data:
          code: '2070'
    - conditions:
      - condition: trigger
        id: AWAY
      sequence:
      - service: alarm_control_panel.alarm_arm_away
        target:
          entity_id: alarm_control_panel.home_alarm
    - conditions:
      - condition: trigger
        id: HOLIDAY
      sequence:
      - service: alarm_control_panel.alarm_arm_away
        target:
          entity_id: alarm_control_panel.home_alarm
    - conditions:
      - condition: trigger
        id: NIGHT_ON
      sequence:
      - service: alarm_control_panel.alarm_arm_night
        target:
          entity_id: alarm_control_panel.home_alarm
    - conditions:
      - condition: trigger
        id: NIGHT_OFF
      - condition: not
        conditions:
        - condition: state
          entity_id: input_boolean.holiday
          state: 'on'
      sequence:
      - service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.home_alarm
        data:
          code: '2070'
    default: []
  mode: single
- id: '1629220807943'
  alias: Lights - All off when away
  description: '- Turn of all lights when away'
  trigger:
  - platform: state
    to: away
    entity_id: sensor.house_state
  condition: []
  action:
  - service: script.lights_turn_off_all_lights
  mode: single
- id: '1629568493916'
  alias: Alarm - Trigger while armed night
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.stair_closet_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.livingroom_motion
    to: 'on'
  - platform: state
    entity_id: binary_sensor.downstairs_hallway_motion
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_night
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
    data: {}
  mode: single
- id: '1629639165423'
  alias: Lights - Turn off if there is no motion - Stairs closet
  description: Turn lights off when no motion is detected
  trigger:
  - platform: state
    entity_id: binary_sensor.stair_closet_motion
    to: 'off'
    for: '{{states(''input_datetime.light_motion_timeout_short'')}}'
  condition:
  - condition: state
    entity_id: light.stairs_closet
    state: 'on'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.stairs_closet
  mode: single
- id: '1629825060315'
  alias: Climate - Hot water service
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: home
    id: 'ON'
  - platform: state
    entity_id: sensor.house_state
    id: 'OFF'
    from: home
  - platform: template
    value_template: "{% set early = state_attr('input_datetime.hot_water_pre_heat',\
      \ 'timestamp') %} \n{% set tnow = strptime(states('sensor.time'), '%H:%M')+timedelta(seconds=2208988800)\
      \ %} \n{% set end_work = state_attr('input_datetime.end_night_workday', 'timestamp')\
      \ %} \n{% set work_end_time = (end_work - early)  | timestamp_utc %} \n{% set\
      \ end_free = state_attr('input_datetime.end_night_free_day', 'timestamp') %}\
      \ \n{% set free_end_time = (end_free - early)  | timestamp_utc %}\n\n{% if is_state('binary_sensor.workday_sensor',\
      \ 'on') %}\n  {% if as_timestamp(work_end_time) == as_timestamp(tnow) %}\n \
      \   true\n  {% else %}\n    false\n  {% endif %}\n{% else %}\n  {% if as_timestamp(free_end_time)\
      \ == as_timestamp(tnow) %}\n    true\n  {% else %}\n    false\n  {% endif %}\n\
      {% endif %}"
    id: EARLY_ON
  - platform: template
    value_template: "{% set early = state_attr('input_datetime.hot_water_early_stop',\
      \ 'timestamp') %} \n{% set tnow = strptime(states('sensor.time'), '%H:%M')+timedelta(seconds=2208988800)\
      \ %} \n{% set end_work = state_attr('input_datetime.start_night_workday', 'timestamp')\
      \ %} \n{% set work_end_time = (end_work - early)  | timestamp_utc %} \n{% set\
      \ end_free = state_attr('input_datetime.start_night_free_day', 'timestamp')\
      \ %} \n{% set free_end_time = (end_free - early)  | timestamp_utc %}\n\n{% if\
      \ is_state('binary_sensor.workday_sensor', 'on') %}\n  {% if as_timestamp(work_end_time)\
      \ == as_timestamp(tnow) %}\n    true\n  {% else %}\n    false\n  {% endif %}\n\
      {% else %}\n  {% if as_timestamp(free_end_time) == as_timestamp(tnow) %}\n \
      \   true\n  {% else %}\n    false\n  {% endif %}\n{% endif %}"
    id: EARLY_OFF
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.hot_water_service
      - service: climate.set_temperature
        target:
          entity_id: climate.hot_water_service
        data:
          temperature: '{{ states(''input_number.hot_water_temperature'') }}'
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.hot_water_service
    - conditions:
      - condition: trigger
        id: EARLY_ON
      - condition: not
        conditions:
        - condition: state
          entity_id: input_boolean.holiday
          state: 'on'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.hot_water_service
      - service: climate.set_temperature
        target:
          entity_id: climate.hot_water_service
        data:
          temperature: '{{ states(''input_number.hot_water_temperature'') }}'
    - conditions:
      - condition: trigger
        id: EARLY_OFF
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.hot_water_service
    default: []
  mode: queued
  max: 3
- id: '1629825198745'
  alias: 'Climate - Heating service '
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: home
    id: 'ON'
  - platform: state
    entity_id: sensor.house_state
    id: 'OFF'
    from: home
  - platform: template
    value_template: "{% set early = state_attr('input_datetime.heating_early_stop',\
      \ 'timestamp') %} \n{% set tnow = strptime(states('sensor.time'), '%H:%M')+timedelta(seconds=2208988800)\
      \ %} \n{% set end_work = state_attr('input_datetime.start_night_workday', 'timestamp')\
      \ %} \n{% set work_end_time = (end_work - early)  | timestamp_utc %} \n{% set\
      \ end_free = state_attr('input_datetime.start_night_free_day', 'timestamp')\
      \ %} \n{% set free_end_time = (end_free - early)  | timestamp_utc %}\n\n{% if\
      \ is_state('binary_sensor.workday_sensor', 'on') %}\n  {% if as_timestamp(work_end_time)\
      \ == as_timestamp(tnow) %}\n    true\n  {% else %}\n    false\n  {% endif %}\n\
      {% else %}\n  {% if as_timestamp(free_end_time) == as_timestamp(tnow) %}\n \
      \   true\n  {% else %}\n    false\n  {% endif %}\n{% endif %}"
    id: EARLY_OFF
  - platform: template
    value_template: "{% set early = state_attr('input_datetime.heating_pre_heat',\
      \ 'timestamp') %} \n{% set tnow = strptime(states('sensor.time'), '%H:%M')+timedelta(seconds=2208988800)\
      \ %} \n{% set end_work = state_attr('input_datetime.end_night_workday', 'timestamp')\
      \ %} \n{% set work_end_time = (end_work - early)  | timestamp_utc %} \n{% set\
      \ end_free = state_attr('input_datetime.end_night_free_day', 'timestamp') %}\
      \ \n{% set free_end_time = (end_free - early)  | timestamp_utc %}\n\n{% if is_state('binary_sensor.workday_sensor',\
      \ 'on') %}\n  {% if as_timestamp(work_end_time) == as_timestamp(tnow) %}\n \
      \   true\n  {% else %}\n    false\n  {% endif %}\n{% else %}\n  {% if as_timestamp(free_end_time)\
      \ == as_timestamp(tnow) %}\n    true\n  {% else %}\n    false\n  {% endif %}\n\
      {% endif %}"
    id: EARLY_ON
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.central_heating
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.central_heating
    - conditions:
      - condition: trigger
        id: EARLY_OFF
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: 'off'
        target:
          entity_id: climate.central_heating
    - conditions:
      - condition: trigger
        id: EARLY_ON
      - condition: not
        conditions:
        - condition: state
          entity_id: input_boolean.holiday
          state: 'on'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat
        target:
          entity_id: climate.central_heating
    default: []
  mode: queued
  max: 3
- id: '1630088921261'
  alias: Lights - Turn off if there is no motion - Upstairs hallway
  description: Turn lights off when no motion is detected
  trigger:
  - platform: state
    to: 'off'
    for: '{{states(''input_datetime.light_motion_timeout_short'')}}'
    entity_id: binary_sensor.upstairs_hallway_motion
  condition:
  - condition: state
    entity_id: light.upstairs_hallway
    state: 'on'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.upstairs_hallway
  mode: single
- id: '1630089027781'
  alias: Lights - Turn off if there is no motion - Downstairs hallway
  description: Turn lights off when no motion is detected
  trigger:
  - platform: state
    entity_id: binary_sensor.downstairs_hallway_motion
    to: 'off'
    for: '{{states(''input_datetime.light_motion_timeout_short'')}}'
  condition:
  - condition: state
    entity_id: light.downstairs_hallway
    state: 'on'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.downstairs_hallway
  mode: single
- id: '1630089139008'
  alias: Lights - Turn off if there is no motion - Living room
  description: Turn lights off when no motion is detected
  trigger:
  - platform: state
    entity_id: binary_sensor.livingroom_motion
    to: 'off'
    for: '{{states(''input_datetime.light_motion_timeout_long'')}}'
  condition:
  - condition: state
    entity_id: binary_sensor.livingroom_motion
    state: 'on'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.living_room
      - light.decorations
  mode: single
- id: '1630259774998'
  alias: Lights - Holiday replay
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.replay_living_room
    id: LIVINGROOM
  - platform: state
    entity_id: sensor.replay_kitchen
    id: KITCHEN
  - platform: state
    entity_id: sensor.replay_closet
    id: CLOSET
  - platform: state
    entity_id: sensor.replay_bedroom
    id: BEDROOM
  - platform: state
    entity_id: sensor.replay_dining_room
    id: DININGROOM
  - platform: state
    entity_id: input_boolean.holiday
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.holiday
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: LIVINGROOM
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_living_room
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.living_room
        - conditions:
          - condition: state
            entity_id: sensor.replay_living_room
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.living_room
        default: []
    - conditions:
      - condition: trigger
        id: DININGROOM
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_dining_room
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.dining_room
        - conditions:
          - condition: state
            entity_id: sensor.replay_dining_room
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.dining_room
        default: []
    - conditions:
      - condition: trigger
        id: BEDROOM
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_bedroom
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.bedroom
        - conditions:
          - condition: state
            entity_id: sensor.replay_bedroom
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.bedroom
        default: []
    - conditions:
      - condition: trigger
        id: CLOSET
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_closet
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.closet
        - conditions:
          - condition: state
            entity_id: sensor.replay_closet
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.closet
        default: []
    - conditions:
      - condition: trigger
        id: KITCHEN
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: sensor.replay_kitchen
            state: '1'
          sequence:
          - service: light.turn_on
            target:
              entity_id: light.kitchen
        - conditions:
          - condition: state
            entity_id: sensor.replay_closet
            state: '0'
          sequence:
          - service: light.turn_off
            target:
              entity_id: light.kitchen
        default: []
    default: []
  mode: parallel
  max: 10
- id: '1630829332532'
  alias: Climate - Publish downstairs temperature to MQTT
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.downstairs_temperature
  - platform: homeassistant
    event: start
  - platform: time_pattern
    seconds: '30'
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: opentherm-thermostat/current-temperature/set
      payload_template: '{{states("sensor.downstairs_temperature")}}'
  mode: parallel
  max: 10
- id: '1631038917696'
  alias: Alarm - Link panel
  description: Ensure both the software and physical alarm panel are linked.
  trigger:
  - platform: state
    entity_id: alarm_control_panel.alarm_panel_ias_ace
    id: PANEL TO HOME ALARM
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    id: HOME ALARM TO PANEL
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: PANEL TO HOME ALARM
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_panel_ias_ace
            state: armed_night
          sequence:
          - service: alarm_control_panel.alarm_arm_night
            target:
              entity_id: alarm_control_panel.home_alarm
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_panel_ias_ace
            state: armed_away
          sequence:
          - service: alarm_control_panel.alarm_arm_away
            target:
              entity_id: alarm_control_panel.home_alarm
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_panel_ias_ace
            state: triggered
          sequence:
          - service: alarm_control_panel.alarm_trigger
            target:
              entity_id: alarm_control_panel.home_alarm
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.alarm_panel_ias_ace
            state: disarmed
          sequence:
          - service: alarm_control_panel.alarm_disarm
            data:
              code: '2070'
            target:
              entity_id: alarm_control_panel.home_alarm
        default: []
    - conditions:
      - condition: trigger
        id: HOME ALARM TO PANEL
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: armed_night
          sequence:
          - service: alarm_control_panel.alarm_arm_night
            target:
              entity_id: alarm_control_panel.alarm_panel_ias_ace
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: armed_away
          sequence:
          - service: alarm_control_panel.alarm_arm_away
            target:
              entity_id: alarm_control_panel.alarm_panel_ias_ace
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: triggered
          sequence:
          - service: alarm_control_panel.alarm_trigger
            target:
              entity_id: alarm_control_panel.alarm_panel_ias_ace
        - conditions:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: disarmed
          sequence:
          - service: alarm_control_panel.alarm_disarm
            data:
              code: '2070'
            target:
              entity_id: alarm_control_panel.alarm_panel_ias_ace
        default: []
    default: []
  mode: queued
  max: 3
- id: '1631473532138'
  alias: Climate - Update setpoint
  description: Update the central heating setpoint when the climate period changes.
  trigger:
  - platform: state
    entity_id: sensor.climate_setpoint
  condition: []
  action:
  - service: climate.set_temperature
    target:
      entity_id: climate.central_heating
    data:
      temperature: '{{ states(''sensor.climate_setpoint'') | float }}'
  mode: single
  max: 3
- id: '1631815874577'
  alias: Climate - Floor heating pump
  description: Floor heating pump follows the central heating. Every night it turns
    to prevent the pump from stalling.
  trigger:
  - platform: state
    entity_id: climate.central_heating
    id: 'ON'
    to: heat
  - platform: state
    entity_id: climate.central_heating
    id: 'OFF'
    to: 'off'
    for:
      hours: 0
      minutes: '{{ state_attr(''input_datetime.floor_heating_pump_delay'', ''timestamp'')
        / 60 | int}}'
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: switch.floor_heating_pump_on_off
    id: TIME
    to: 'off'
    for:
      hours: 12
      minutes: 0
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.floor_heating_pump_on_off
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.floor_heating_pump_on_off
    - conditions:
      - condition: trigger
        id: TIME
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.floor_heating_pump_on_off
      - delay:
          hours: 0
          minutes: 3
          seconds: 0
          milliseconds: 0
      - service: switch.turn_off
        target:
          entity_id: switch.floor_heating_pump_on_off
    default: []
  mode: restart
- id: '1632334823224'
  alias: Utility - Notify when offline
  description: Send a notification if any network device is offline for more than
    5 minutes.
  trigger:
  - platform: state
    entity_id:
    - sensor.local_ip
    - binary_sensor.kpn_tv
    - binary_sensor.hue_utility_bridge
    - binary_sensor.range_extender
    - binary_sensor.hue_garden_bridge
    - binary_sensor.sprinkler_controller
    - binary_sensor.opentherm_controller
    - binary_sensor.dining_room_home_mini
    - binary_sensor.esp_home_test_device
    - binary_sensor.slimme_lezer
    - binary_sensor.reindeer_status
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
    to: 'off'
    from: 'on'
  condition: []
  action:
  - service: notify.mobile_app_sm_g960f
    data:
      message: '{{ state_attr(trigger.to_state.entity_id, ''friendly_name'') }} is
        offline more than 5 minutes.'
      data:
        actions:
        - action: URI
          title: More info
          uri: /lovelace/network
      title: Device offline
  mode: single
- id: '1632764660880'
  alias: Utility - Notify on restart
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: notify.mobile_app_sm_g960f
    data:
      title: Restarted 🌟
      message: Home Assistant has restarted.
  mode: single
- id: '1633712008868'
  alias: Chime - Notify
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.doorbell_pressed
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: script.notify_who_is_home
    data:
      message: Er is iemand aan de voordeur.
      title: Ding dong 🔔
      timeout: 120
  - service: script.speak
    data:
      message: Er staat iemand aan de voordeur.
  mode: single
- id: '1634576080537'
  alias: Air - Notify
  description: Send a notification when any of the air quality values is out of limits.
  trigger:
  - platform: state
    entity_id: sensor.carbon_dioxide_state
    id: CO2_BAD
    to: Bad
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.carbon_dioxide_state
    id: CO2_DANGER
    to: Danger
    for:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.carbon_dioxide_state
    id: CO2_BAD
    to: Bad
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.carbon_dioxide_state
    id: CO2_DANGER
    to: Danger
    for:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.carbon_dioxide_state
    id: CO2_BAD
    to: Bad
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.carbon_dioxide_state
    id: CO2_DANGER
    to: Danger
    for:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.voc_state
    id: VOC_BAD
    to: Bad
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.voc_state
    id: VOC_DANGER
    to: Danger
    for:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.humidity_state
    id: HUM_HIGH
    to: High
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: sensor.humidity_state
    id: HUM_LOW
    to: Low
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: CO2_DANGER
        - condition: trigger
          id: CO2_BAD
      sequence:
      - service: script.notify_who_is_home
        data:
          title: CO2 te hoog; zet de ventilator hoger
          message: ⚠️ CO2 te hoog
          timeout: 0
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: VOC_DANGER
        - condition: trigger
          id: VOC_BAD
      sequence:
      - service: script.notify_who_is_home
        data:
          title: VOC te hoog; zet de ventilator hoger
          message: ⚠️ VOC te hoog
          timeout: 0
    - conditions:
      - condition: trigger
        id: HUM_HIGH
      sequence:
      - service: script.notify_who_is_home
        data:
          title: Luchtvochtigheid te hoog; zet de ventilator hoger
          message: 💧 Luchtvochtigheid te hoog
          timeout: 0
    - conditions:
      - condition: trigger
        id: HUM_LOW
      sequence:
      - service: script.notify_who_is_home
        data:
          title: Luchtvochtigheid te laag; sluit de ramen
          message: 💧 Luchtvochtigheid te laag
          timeout: 0
    default: []
  mode: single
- id: '1635185749340'
  alias: Utility - Set theme
  description: Ensure the preffered theme is allways used.
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: frontend.set_theme
    data:
      name: outline
  mode: single
- id: '1635571062556'
  alias: Utility - Update quiet helper
  description: Set quiet when when house state is night.
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: night
    id: QUIET
  - platform: state
    entity_id: sensor.house_state
    from: night
    id: SOUND
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: QUIET
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.quiet
    - conditions:
      - condition: trigger
        id: SOUND
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.quiet
    default: []
  mode: single
- id: '1635792969335'
  alias: 'Lights - Reindeer follows decorations '
  description: Have the ESPHome reindeer follow the decorations light group.
  trigger:
  - platform: state
    entity_id: light.decorations
    to: 'on'
    id: 'ON'
  - platform: state
    entity_id: light.decorations
    id: 'OFF'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - type: turn_on
        device_id: 5c76869dfc323722f7676b7a0448a090
        entity_id: switch.reindeer_light
        domain: switch
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - type: turn_off
        device_id: 5c76869dfc323722f7676b7a0448a090
        entity_id: switch.reindeer_light
        domain: switch
    default: []
  mode: single
- id: '1635875380581'
  alias: Utility - Notify when boiler offline
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.boiler_temperature
    to: '0'
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: notify.mobile_app_sm_g960f
    data:
      message: The boiler is offline more than 5 minutes.
      data:
        actions:
        - action: URI
          title: More info
          uri: /lovelace/climate
      title: Boiler offline
  mode: single
- id: '1636210209751'
  alias: Lights - Outdoor decorations
  description: Turn on outdoor decorations when (close to) home and the sun is down.
  trigger:
  - platform: state
    entity_id: sensor.outdoor_lights
    to: 'on'
    id: 'ON'
  - platform: state
    entity_id: sensor.outdoor_lights
    to: 'off'
    id: 'OFF'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'ON'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.front_garden
    - conditions:
      - condition: trigger
        id: 'OFF'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.front_garden
    default: []
  mode: single
- id: '1636297508172'
  alias: Lights - Turn on lights when first down
  description: Turn the downstairs lights on when the first person is downstairs.
    The state is saved in an input boolean.
  trigger:
  - platform: state
    entity_id: sensor.house_state
    to: night
    id: RESET
  - platform: state
    entity_id: binary_sensor.downstairs_hallway_motion
    to: 'on'
    id: TRIGGER
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: RESET
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.first_down
    - conditions:
      - condition: state
        entity_id: input_boolean.first_down
        state: 'off'
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.first_down
      - service: light.turn_on
        target:
          entity_id:
          - light.living_room
          - light.decorations
    default: []
  mode: single
- id: '1636480621793'
  alias: Utility - Notify for update
  description: Send a notification when a new update is available.
  trigger:
  - platform: state
    entity_id: sensor.latest_version
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: sensor.latest_version
      state: unknown
  - condition: template
    value_template: "  {% if states('sensor.latest_version') != states('sensor.current_version')\
      \ %}\n    true\n  {% endif %}"
  action:
  - service: notify.mobile_app_sm_g960f
    data:
      title: Update available 🎉
      message: New version available {{states('sensor.latest_version')}}
      data:
        clickAction: https://www.home-assistant.io/latest-release-notes/
        actions:
        - action: URI
          title: More info
          uri: https://www.home-assistant.io/latest-release-notes/
  - service: notify.persistent_notification
    data:
      title: Update available 🎉
      message: New version available {{states('sensor.latest_version')}}
  mode: single
